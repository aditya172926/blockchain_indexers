token url promise:Ok("https://api.unstoppabledomains.com/metadata/bukakke.crypto")
[2023-10-12T07:57:26Z INFO  macha_indexer::abstractor] The nft data is "{\"name\":\"bukakke.crypto\",\"tokenId\":\"2826113115358146450078180580193610863875326626328438954942965653900461208795\",\"namehash\":\"0x063f85f9801045417bfcf2950325b9a1acb5162daed708ef2d3e5ce3f92df4db\",\"description\":\"A CNS or UNS blockchain domain. Use it to resolve your cryptocurrency addresses and decentralized websites.\",\"external_url\":\"https://unstoppabledomains.com/search?searchTerm=bukakke.crypto\",\"image\":\"https://api.unstoppabledomains.com/metadata/image-src/bukakke.crypto.svg\",\"image_url\":\"https://api.unstoppabledomains.com/metadata/image-src/bukakke.crypto.svg\",\"attributes\":[{\"trait_type\":\"Ending\",\"value\":\"crypto\"},{\"trait_type\":\"Level\",\"value\":2},{\"trait_type\":\"Length\",\"value\":7},{\"trait_type\":\"Subdomains\",\"value\":0},{\"trait_type\":\"Type\",\"value\":\"standard\"},{\"trait_type\":\"Character Set\",\"value\":\"letter\"}],\"background_color\":\"EDEDEE\"}"




the method is:FunctionCall { tx: Eip1559(Eip1559TransactionRequest { from: None, to: Some(Address(0xd1e5b0ff1287aa9f9a268759062e4ab08b9dacbe)), gas: None, value: None, data: Some(Bytes()), nonce: None, access_list: AccessList([]), max_priority_fee_per_gas: None, max_fee_per_gas: None, chain_id: None }), function: Function { name: "tokenURI", inputs: [Param { name: "tokenId", kind: Uint(256), internal_type: Some("uint256") }], outputs: [Param { name: "", kind: String, internal_type: Some("string") }], constant: Some(true), state_mutability: View }, block: 
None, client: Provider { inner: Provider { id: 1, client: Client { accepts: Accepts, proxies: [Proxy(System({}), None)], referer: true, default_headers: {"accept": "*/*"} }, url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("mainnet.infura.io")), port: None, path: "/v3/d0ff55026e4f4547b9f334497888fc07", query: None, fragment: None } }, ens: None, interval: None, from: None, _node_client: Mutex { is_locked: false, has_waiters: false } }, datatype: PhantomData<alloc::string::String>, _m: PhantomData<ethers_providers::rpc::provider::Provider<ethers_providers::rpc::transports::http::Provider>> }
